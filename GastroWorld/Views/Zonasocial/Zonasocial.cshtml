@*

*@
@{
}
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<title>GastroWorld</title>
<style>
    body {
        font-family: Arial, sans-serif;
        text-align: center;
        margin: 0;
        padding: 0;
        color: white;
    }

    .navbar {
        font: small-caps 100%/200% serif;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-top: 20px;
        background-image: url("https://i.pinimg.com/474x/0e/a1/9e/0ea19ed01eb77f7be5b9e6d07b9ef258.jpg");
    }

    .form-container {
        background-color: #333;
        padding: 20px;
        border-radius: 10px;
        width: 350px;
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);
    }

    input, textarea {
        width: 100%;
        margin-bottom: 10px;
        padding: 8px;
        border-radius: 5px;
        border: none;
    }

    .btn {
        background-color: #28a745;
        color: white;
        padding: 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    #posts-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 20px;
        margin-top: 20px;
        width: 90%;
    }

    .post {
        background-color: #333;
        color: white;
        padding: 15px;
        border-radius: 10px;
        width: 300px;
        box-shadow: 0 0 15px rgba(255, 255, 255, 0.1);
        position: relative;
    }

        .post img {
            width: 100%;
            height: 200px;
            border-radius: 10px;
            margin-top: 10px;
            object-fit: cover;
        }

    .actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 10px;
    }

    .delete-btn {
        color: red;
        cursor: pointer;
    }

    .comments {
        margin-top: 15px;
        text-align: left;
        padding: 10px;
        background-color: #1e1e2d;
        border-radius: 8px;
        box-shadow: 0 0 5px rgba(255, 255, 255, 0.1);
    }

    .comment-list {
        max-height: 150px;
        overflow-y: auto;
        padding: 5px;
    }

        .comment-list p {
            background-color: #2a2a3a;
            padding: 8px;
            border-radius: 5px;
            margin: 5px 0;
            font-size: 14px;
        }

    .comment-input {
        width: calc(100% - 10px);
        padding: 8px;
        margin-top: 5px;
        border-radius: 5px;
        border: none;
        background-color: #333;
        color: white;
    }

    .comment-btn {
        width: 100%;
        margin-top: 5px;
        padding: 8px;
        border-radius: 5px;
        border: none;
        background-color: #007bff;
        color: white;
        cursor: pointer;
    }

    .fondo {
        margin: 0;
        padding: 0;
        height: auto;
        background-image: url("https://lendan.com/wp-content/uploads/2019/01/influencia-alimentacion-piel.jpg");
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        background-attachment: fixed;
        z-index: 1;
        padding: 20px;
        color: white;
    }

    .welcome {
        font-size: 36px;
        font-weight: bold;
        color: #333;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        font-size: 80px;
        color: black;
        background-color: white;
        padding: 15px;
        display: inline-block;
    }
</style>
<div class="fondo">
    <div class="navbar">
        <h1 class="welcome">Bienvenido a la zona social, un pequeño <br />
        <br />
        espacio para compartir con los demas.</h1>
    </div>
 
    <div class="container">
    <br />
        <div class="form-container">
            <h2 style="color: whitesmoke;">Zona Social</h2>
            <input type="text" id="username" placeholder="Escribe tu nombre">
            <textarea id="message" placeholder="Escribe algo..."></textarea>
            <input type="file" id="imageInput">
            <button class="btn" onclick="addPost()">Publicar</button>
        </div>
        <div id="posts-container"></div>
        <br />
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", loadPosts);

        function addPost() {
            const username = document.getElementById("username").value.trim();
            const message = document.getElementById("message").value.trim();
            const imageInput = document.getElementById("imageInput");

            if (!username || !message) {
                Swal.fire({
                    icon: 'warning',
                    title: '¡Campos incompletos!',
                    text: 'Debes llenar tu nombre y mensaje para publicar.',
                    confirmButtonColor: '#007bff'
                });
                return;
            }


            let imageUrl = "";
            if (imageInput.files.length > 0) {
                const reader = new FileReader();
                reader.onload = function (event) {
                    imageUrl = event.target.result;
                    saveAndRenderPost(username, message, imageUrl);
                };
                reader.readAsDataURL(imageInput.files[0]);
            } else {
                saveAndRenderPost(username, message, "");
            }

            document.getElementById("username").value = "";
            document.getElementById("message").value = "";
            imageInput.value = "";
        }

        function saveAndRenderPost(username, message, imageUrl) {
            const postId = Date.now();
            const post = { id: postId, username, message, imageUrl, likes: 0, dislikes: 0, comments: [] };
            let posts = JSON.parse(localStorage.getItem("posts")) || [];
            posts.unshift(post);
            localStorage.setItem("posts", JSON.stringify(posts));

            renderPost(post);
        }

        function renderPost(post) {
            const postContainer = document.createElement("div");
            postContainer.classList.add("post");
            postContainer.setAttribute("data-id", post.id);

            postContainer.innerHTML = `
                        <strong>${post.username}</strong>
                        <p>${post.message}</p>
                        ${post.imageUrl ? `<img src="${post.imageUrl}" alt="Imagen">` : ""}
                        <div class="actions">
                            <span class="delete-btn" onclick="deletePost(${post.id})">❌ Eliminar</span>
                        </div>
                        <div class="comments">
                            <strong>Comentarios:</strong>
                            <div class="comment-list" id="comments-${post.id}">
                                ${post.comments.map(comment => `<p>${comment}</p>`).join("")}
                            </div>
                            <input type="text" class="comment-input" id="comment-input-${post.id}" placeholder="Escribe un comentario">
                            <button class="comment-btn" onclick="addComment(${post.id})">Comentar</button>
                        </div>
                    `;

            document.getElementById("posts-container").prepend(postContainer);
        }

        function deletePost(postId) {
            let posts = JSON.parse(localStorage.getItem("posts")) || [];
            posts = posts.filter(p => p.id !== postId);
            localStorage.setItem("posts", JSON.stringify(posts));

            let postElement = document.querySelector(`.post[data-id="${postId}"]`);
            if (postElement) {
                postElement.remove();
            }
        }

        function addComment(postId) {
            let commentText = document.getElementById(`comment-input-${postId}`).value.trim();
            if (!commentText) return;

            let posts = JSON.parse(localStorage.getItem("posts")) || [];
            let post = posts.find(p => p.id === postId);

            if (post) {
                post.comments.push(commentText);
                localStorage.setItem("posts", JSON.stringify(posts));

                let commentsContainer = document.getElementById(`comments-${postId}`);
                let newComment = document.createElement("p");
                newComment.textContent = commentText;
                commentsContainer.appendChild(newComment);

                document.getElementById(`comment-input-${postId}`).value = "";
            }
        }

        function loadPosts() {
            const posts = JSON.parse(localStorage.getItem("posts")) || [];
            posts.forEach(renderPost);
        }
    </script>
</div>