@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
    <title>Perfil de Usuario Personalizable</title>
    <style>
        .body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
        }

        .container {
            max-width: 800px;
            margin: auto;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .cover-image {
            width: 100%;
            height: 200px;
            border-radius: 8px;
            object-fit: cover;
            margin-bottom: 20px;
        }

        .profile-header {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }

            .profile-header img {
                border-radius: 50%;
                width: 100px;
                height: 100px;
                margin-right: 20px;
            }

            .profile-header h1 {
                margin: 0;
            }

        .edit-button {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
        }

        .delete-button {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            margin-left: 10px;
        }

        .form-group {
            margin-bottom: 15px;
        }

            .form-group label {
                display: block;
                margin-bottom: 5px;
            }

            .form-group input, .form-group textarea {
                width: 100%;
                padding: 8px;
                border: 1px solid #ccc;
                border-radius: 5px;
            }

        .posts {
            margin-top: 20px;
        }

        .post {
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 5px;
        }

    .fondo {
       background-color:#CCCCCC;
    }
    footer, .wrapper:after {
        height: auto;
    }
    </style>
<div class="fondo">
    <div class="container">
        <img id="coverImage" class="cover-image" src="https://via.placeholder.com/800x200" alt="Imagen de Portada">

        <div class="profile-header">
            <img id="profileImage" src="https://via.placeholder.com/100" alt="Imagen de Perfil">
            <div>
                <h1 id="username">Nombre de Usuario</h1>
                <button class="edit-button" onclick="toggleEditForm()">Editar Perfil</button>
                <button class="delete-button" onclick="deleteProfile()">Eliminar Perfil</button>
            </div>
        </div>

        <div id="editForm" style="display: none;">
            <h2>Personaliza tu Perfil</h2>
            <div class="form-group">
                <label for="newUsername">Nombre de Usuario:</label>
                <input type="text" id="newUsername" placeholder="Ingrese su nombre de usuario">
            </div>
            <div class="form-group">
                <label for="profileImageInput">Imagen de Perfil:</label>
                <input type="file" id="profileImageInput" accept="image/*" onchange="loadFile(event, 'profileImage')">
            </div>
            <div class="form-group">
                <label for="coverImageInput">Imagen de Portada:</label>
                <input type="file" id="coverImageInput" accept="image/*" onchange="loadFile(event, 'coverImage')">
            </div>
            <div class="form-group">
                <label for="aboutMe">Sobre mí:</label>
                <textarea id="aboutMe" placeholder="Escribe algo sobre ti"></textarea>
            </div>
            <button class="edit-button" onclick="saveProfile()">Guardar Cambios</button>
        </div>

        <div class="profile-info">
            <h2>Sobre mí</h2>
            <p id="aboutMeDisplay">Descripción breve sobre el usuario.</p>
        </div>

        <div class="posts">
            <h2>Publicaciones</h2>
            <div id="userPosts"></div>
        </div>

        <div class="form-group">
            <label for="switchUser">Cambiar Usuario:</label>
            <input type="text" id="switchUser" placeholder="Ingrese el nombre de usuario">
            <button class="edit-button" onclick="switchUser()">Cambiar</button>
        </div>
    </div>

    <script>
        // Cargar perfil desde localStorage
        function loadProfile(username) {
            const profiles = JSON.parse(localStorage.getItem('allProfiles')) || {};
            const profile = profiles[username] || {};

            document.getElementById('username').textContent = profile.username || 'Nombre de Usuario';
            document.getElementById('aboutMeDisplay').textContent = profile.aboutMe || 'Descripción breve sobre el usuario.';

            if (profile.profileImage) {
                document.getElementById('profileImage').src = profile.profileImage;
            }

            if (profile.coverImage) {
                document.getElementById('coverImage').src = profile.coverImage;
            }

            loadUserPosts(username); // Cargar publicaciones del usuario
        }

        // Cargar publicaciones del usuario
        function loadUserPosts(username) {
            const posts = JSON.parse(localStorage.getItem('posts')) || [];
            const userPostsContainer = document.getElementById('userPosts');
            userPostsContainer.innerHTML = ''; // Limpiar publicaciones actuales

            posts.reverse().forEach(post => {
                if (post.username === username) {
                    const postDiv = document.createElement('div');
                    postDiv.classList.add('post');
                    postDiv.innerHTML = `<strong>${post.username}</strong>: ${post.content}
                        <p><em>${new Date(post.timestamp).toLocaleString()}</em></p>
                        ${post.image ? `<img src="${post.image}" alt="Imagen de publicación">` : ''}`;
                    userPostsContainer.appendChild(postDiv);
                }
            });
        }

        // Cargar archivo como URL base64
        function loadFile(event, imageType) {
            const file = event.target.files[0];
            const reader = new FileReader();

            reader.onload = function() {
                if (imageType === 'profileImage') {
                    document.getElementById('profileImage').src = reader.result;
                } else if (imageType === 'coverImage') {
                    document.getElementById('coverImage').src = reader.result;
                }
            }

            if (file) {
                reader.readAsDataURL(file);
            }
        }

        // Guardar perfil en localStorage
        function saveProfile() {
            const username = document.getElementById('newUsername').value || document.getElementById('username').textContent;
            const aboutMe = document.getElementById('aboutMe').value;
            const profileImage = document.getElementById('profileImage').src;
            const coverImage = document.getElementById('coverImage').src;

            const profiles = JSON.parse(localStorage.getItem('allProfiles')) || {};
            profiles[username] = {
                username: username,
                aboutMe: aboutMe,
                profileImage: profileImage,
                coverImage: coverImage
            };

            localStorage.setItem('allProfiles', JSON.stringify(profiles));
            loadProfile(username); // Actualizar la vista del perfil
            toggleEditForm(); // Ocultar el formulario
        }

        // Cambiar de usuario
        function switchUser() {
            const newUsername = document.getElementById('switchUser').value;
            if (newUsername) {
                loadProfile(newUsername); // Cargar el nuevo perfil
            }
        }

        // Eliminar perfil
        function deleteProfile() {
            const username = document.getElementById('username').textContent;
            const profiles = JSON.parse(localStorage.getItem('allProfiles')) || {};

            if (profiles[username]) {
                delete profiles[username]; // Eliminar el perfil actual
                localStorage.setItem('allProfiles', JSON.stringify(profiles));
                alert('Perfil eliminado. Puedes crear uno nuevo.');
                loadProfile(''); // Cargar un perfil vacío o por defecto
            }
        }

        // Mostrar u ocultar el formulario de edición
        function toggleEditForm() {
            const form = document.getElementById('editForm');
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }

        // Cargar perfil al iniciar
        loadProfile('Nombre de Usuario'); // Cargar el perfil por defecto al iniciar
    </script>
</div>