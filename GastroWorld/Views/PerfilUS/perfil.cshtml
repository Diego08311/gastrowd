@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Perfil de Usuario - Gastronomía</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #ff6b35;
            --secondary-color: #f7c59f;
            --text-color: #333;
            --light-bg: #f9f9f9;
            --border-color: #e0e0e0;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: var(--light-bg);
            color: var(--text-color);
            line-height: 1.6;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .profile-header {
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: white;
            border-radius: 10px;
            padding: 30px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            position: relative;
        }
        
        .profile-cover {
            width: 100%;
            height: 200px;
            background-image: url('/api/placeholder/1200/200');
            background-size: cover;
            background-position: center;
            border-radius: 10px 10px 0 0;
            margin-bottom: 60px;
        }
        
        .profile-avatar {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            border: 5px solid white;
            background-color: var(--secondary-color);
            object-fit: cover;
            position: absolute;
            top: 130px;
        }
        
        .profile-info {
            text-align: center;
            margin-bottom: 20px;
        }
        
        .profile-name {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .profile-username {
            color: #777;
            margin-bottom: 10px;
        }
        
        .profile-bio {
            max-width: 600px;
            margin-bottom: 20px;
        }
        
        .profile-stats {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }
        
        .stat-item {
            margin: 0 20px;
            text-align: center;
        }
        
        .stat-value {
            font-weight: bold;
            font-size: 18px;
        }
        
        .stat-label {
            color: #777;
            font-size: 14px;
        }
        
        .profile-actions {
            display: flex;
            gap: 10px;
        }
        
        .boton {
            padding: 8px 20px;
            border-radius: 50px;
            border: none;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .boton-primary {
            background-color: var(--primary-color);
            color: white;
        }
        
        .boton-primary:hover {
            background-color: #e55a29;
        }
        
        .boton-secondary {
            background-color: #f0f0f0;
            color: var(--text-color);
        }
        
        .boton-secondary:hover {
            background-color: #e0e0e0;
        }
        
        .profile-content {
            display: grid;
            grid-template-columns: 1fr 3fr;
            gap: 20px;
        }
        
        .profile-sidebar {
            background-color: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .sidebar-section {
            margin-bottom: 30px;
        }
        
        .sidebar-title {
            font-size: 18px;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
        }
        
        .sidebar-title i {
            margin-right: 10px;
            color: var(--primary-color);
        }
        
        .specialty-item, .badge-item {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }
        
        .specialty-icon, .badge-icon {
            width: 40px;
            height: 40px;
            background-color: var(--secondary-color);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 15px;
            color: #fff;
        }
        
        .badge-icon {
            background-color: #ffd700;
        }
        
        .specialty-info, .badge-info {
            flex: 1;
        }
        
        .specialty-name, .badge-name {
            font-weight: 600;
        }
        
        .specialty-desc, .badge-desc {
            font-size: 13px;
            color: #777;
        }
        
        .profile-main {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }
        
        .posts-section {
            background-color: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .section-title {
            font-size: 18px;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
        }
        
        .section-title i {
            margin-right: 10px;
            color: var(--primary-color);
        }
        
        .post-item {
            display: flex;
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid var(--border-color);
        }
        
        .post-item:last-child {
            border-bottom: none;
            margin-bottom: 0;
            padding-bottom: 0;
        }
        
        .post-icon {
            width: 40px;
            height: 40px;
            background-color: var(--secondary-color);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 15px;
            color: white;
            flex-shrink: 0;
        }
        
        .post-info {
            flex: 1;
        }
        
        .post-text {
            margin-bottom: 5px;
        }
        
        .post-text a {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 600;
        }
        
        .post-text a:hover {
            text-decoration: underline;
        }
        
        .post-time {
            color: #777;
            font-size: 13px;
        }

        .post-image {
            width: 100%;
            max-height: 300px;
            object-fit: cover;
            border-radius: 8px;
            margin-top: 10px;
        }
        
        .edit-profile-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0,0,0,0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }
        
        .modal-content {
            background-color: white;
            border-radius: 10px;
            padding: 30px;
            max-width: 500px;
            width: 100%;
            max-height: 90vh;
            overflow-y: auto;
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .modal-title {
            font-size: 20px;
            font-weight: 600;
        }
        
        .close-modal {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #777;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
        }
        
        .form-input {
            width: 100%;
            padding: 10px;
            border: 1px solid var(--border-color);
            border-radius: 5px;
            font-size: 16px;
        }
        
        .form-textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid var(--border-color);
            border-radius: 5px;
            font-size: 16px;
            resize: vertical;
            min-height: 100px;
        }
        
        .modal-footer {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }

        .fondo {
            margin: 0;
            padding: 0;
            height: auto;
            background-image: url("https://lendan.com/wp-content/uploads/2019/01/influencia-alimentacion-piel.jpg");
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            background-attachment: fixed;
            padding: 20px;
            color: white;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

    </style>
</head>
<body>
    <div class="container">
        <div class="profile-header">
            <div class="profile-cover"></div>
            <img src="/api/placeholder/150/150" alt="Foto de perfil" class="profile-avatar">
            <div class="profile-info">
                <h1 class="profile-name">Usuario Nuevo</h1>
                <p class="profile-username">Alias</p>
                <p class="profile-bio">Describe que te gusta de la gastronomia,cocina,restaurantes, etc..</p>
            </div>
            <div class="profile-stats">
                <div class="stat-item">
                    <div class="stat-value">0</div>
                    <div class="stat-label">Recetas</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value">0</div>
                    <div class="stat-label">Colecciones</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value">0</div>
                    <div class="stat-label">Seguidores</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value">0</div>
                    <div class="stat-label">Siguiendo</div>
                </div>
            </div>
            <div class="profile-actions">
                <button class="boton boton-primary" id="edit-profile-btn">Editar perfil</button>
            </div>
        </div>
        
        <div class="profile-content">
            <div class="profile-sidebar">
                <div class="sidebar-section">
                    <h3 class="sidebar-title"><i class="fas fa-utensils"></i> Guardados</h3>
                   
                    <div class="specialty-item">
                        <div class="specialty-icon"><i class="fas fa-pizza-slice"></i></div>
                        <div class="specialty-info">
                            <div class="specialty-name">Cocina Mediterránea</div>
                            <div class="specialty-desc">3 años de experiencia</div>
                        </div>
                    </div>
                    <div class="specialty-item">
                        <div class="specialty-icon"><i class="fas fa-pepper-hot"></i></div>
                        <div class="specialty-info">
                            <div class="specialty-name">Cocina Mexicana</div>
                            <div class="specialty-desc">2 años de experiencia</div>
                        </div>
                    </div>
                </div>
                
                <div class="sidebar-section">
                    <h3 class="sidebar-title"><i class="fas fa-award"></i> Insignias</h3>
                    <div class="badge-item">
                        <div class="badge-icon"><i class="fas fa-star"></i></div>
                        <div class="badge-info">
                            <div class="badge-name">Chef Estrella</div>
                            <div class="badge-desc">100+ recetas populares</div>
                        </div>
                    </div>
                    <div class="badge-item">
                        <div class="badge-icon"><i class="fas fa-camera"></i></div>
                        <div class="badge-info">
                            <div class="badge-name">Fotógrafo Culinario</div>
                            <div class="badge-desc">Fotos de alta calidad</div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="profile-main">
                <div class="posts-section">
                    <h3 class="section-title"><i class="fas fa-newspaper"></i> Tus publicaciones</h3>
                    <div id="posts-container">
                        <!-- Aquí se cargarán las publicaciones desde localStorage -->
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Modal de edición de perfil -->
    <div class="edit-profile-modal" id="edit-profile-modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Editar perfil</h2>
                <button class="close-modal" id="close-modal">&times;</button>
            </div>
            <form id="profile-form">
                <div class="form-group">
                    <label class="form-label">Nombre</label>
                    <input type="text" class="form-input" id="profile-name" value="María González">
                </div>
                <div class="form-group">
                    <label class="form-label">Nombre de usuario</label>
                    <input type="text" class="form-input" id="profile-username" value="mariachef">
                </div>
                <div class="form-group">
                    <label class="form-label">Biografía</label>
                    <textarea class="form-textarea" id="profile-bio">Amante de la gastronomía mediterránea y experta en repostería. Explorando sabores desde 2015 y compartiendo mis descubrimientos culinarios.</textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="boton boton-secondary" id="cancel-edit">Cancelar</button>
                    <button type="submit" class="boton boton-primary">Guardar cambios</button>
                </div>
            </form>
        </div>
    </div>
    
    <script>
        // Función para abrir el modal de edición de perfil
        document.getElementById('edit-profile-btn').addEventListener('click', function() {
            document.getElementById('edit-profile-modal').style.display = 'flex';
        });
        
        // Función para cerrar el modal
        document.getElementById('close-modal').addEventListener('click', function() {
            document.getElementById('edit-profile-modal').style.display = 'none';
        });
        
        document.getElementById('cancel-edit').addEventListener('click', function() {
            document.getElementById('edit-profile-modal').style.display = 'none';
        });
        
        // Manejo del formulario
        document.getElementById('profile-form').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Obtener los valores del formulario
            const name = document.getElementById('profile-name').value;
            const username = document.getElementById('profile-username').value;
            const bio = document.getElementById('profile-bio').value;
            
            // Actualizar el perfil
            document.querySelector('.profile-name').textContent = name;
            document.querySelector('.profile-username').textContent = '' + username;
            document.querySelector('.profile-bio').textContent = bio;
            
            // Cerrar el modal
            document.getElementById('edit-profile-modal').style.display = 'none';
            
            // Guardar en localStorage si se desea persistencia
            localStorage.setItem('profileName', name);
            localStorage.setItem('profileUsername', username);
            localStorage.setItem('profileBio', bio);
        });
        
        // Cargar publicaciones del localStorage
        function loadPosts() {
            const postsContainer = document.getElementById('posts-container');
            let posts = JSON.parse(localStorage.getItem('userPosts')) || [];
            
            // Si no hay publicaciones en localStorage, cargamos datos de ejemplo
            if (posts.length === 0) {
                posts = [
                    {
                        id: 1,
                        type: 'recipe',
                        title: 'Paella Valenciana Tradicional',
                        description: 'Hoy compartí mi receta favorita de paella valenciana tradicional. Un plato emblemático de la cocina española que todos deberían probar al menos una vez.',
                        image: '/api/placeholder/600/400',
                        date: '2025-03-28T12:35:00'
                    },
                    {
                        id: 2,
                        type: 'review',
                        title: 'Restaurante El Olivo',
                        description: 'Visité el nuevo restaurante El Olivo y quedé encantada con su propuesta gastronómica. El risotto de setas salvajes es simplemente espectacular.',
                        image: '/api/placeholder/600/400',
                        date: '2025-03-25T19:42:00'
                    },
                    {
                        id: 3,
                        type: 'collection',
                        title: 'Postres para Ocasiones Especiales',
                        description: 'Acabo de crear una nueva colección con mis mejores recetas de postres para esas ocasiones que merecen algo especial. ¡No olviden revisar mi tiramisú casero!',
                        image: '/api/placeholder/600/400',
                        date: '2025-03-23T15:20:00'
                    }
                ];
                
                // Guardar los datos de ejemplo en localStorage
                localStorage.setItem('userPosts', JSON.stringify(posts));
            }
            
            // Limpiar el contenedor de publicaciones
            postsContainer.innerHTML = '';
            
            // Ordenar publicaciones por fecha (más recientes primero)
            posts.sort((a, b) => new Date(b.date) - new Date(a.date));
            
            // Mostrar las publicaciones
            posts.forEach(post => {
                const postDate = new Date(post.date);
                const today = new Date();
                
                // Calcular la diferencia en días
                const diffTime = Math.abs(today - postDate);
                const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));
                
                let timeStr;
                if (diffDays === 0) {
                    timeStr = 'Hoy';
                } else if (diffDays === 1) {
                    timeStr = 'Ayer';
                } else if (diffDays < 7) {
                    timeStr = `Hace ${diffDays} días`;
                } else if (diffDays < 30) {
                    const weeks = Math.floor(diffDays / 7);
                    timeStr = `Hace ${weeks} ${weeks === 1 ? 'semana' : 'semanas'}`;
                } else {
                    const months = Math.floor(diffDays / 30);
                    timeStr = `Hace ${months} ${months === 1 ? 'mes' : 'meses'}`;
                }
                
                // Crear el elemento de publicación
                const postElement = document.createElement('div');
                postElement.className = 'post-item';
                
                // Determinar el icono según el tipo de publicación
                let iconClass;
                switch (post.type) {
                    case 'recipe':
                        iconClass = 'fas fa-utensils';
                        break;
                    case 'review':
                        iconClass = 'fas fa-comment';
                        break;
                    case 'collection':
                        iconClass = 'fas fa-bookmark';
                        break;
                    default:
                        iconClass = 'fas fa-pen';
                }
                
                postElement.innerHTML = `
                    <div class="post-icon"><i class="${iconClass}"></i></div>
                    <div class="post-info">
                        <p class="post-text">${post.description}</p>
                        <img src="${post.image}" alt="${post.title}" class="post-image">
                        <p class="post-time">${timeStr}</p>
                    </div>
                `;
                
                postsContainer.appendChild(postElement);
            });
        }
        
        // Función para añadir una nueva publicación (para uso futuro)
        function addPost(post) {
            let posts = JSON.parse(localStorage.getItem('userPosts')) || [];
            
            // Generar ID único
            const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;
            
            // Añadir nueva publicación
            posts.push({
                id: newId,
                date: new Date().toISOString(),
                ...post
            });
            
            // Guardar en localStorage
            localStorage.setItem('userPosts', JSON.stringify(posts));
            
            // Recargar publicaciones
            loadPosts();
        }
        // Cargar datos almacenados en localStorage cuando la página se carga
window.addEventListener('DOMContentLoaded', function() {
    // Cargar datos del perfil si existen
    const name = localStorage.getItem('profileName');
    const username = localStorage.getItem('profileUsername');
    const bio = localStorage.getItem('profileBio');
    const avatarUrl = localStorage.getItem('profileAvatar') || '/api/placeholder/150/150';
    const coverUrl = localStorage.getItem('profileCover') || '/api/placeholder/1200/200';
    
    // Actualizar textos del perfil
    if (name) document.querySelector('.profile-name').textContent = name;
    if (username) document.querySelector('.profile-username').textContent = '' + username;
    if (bio) document.querySelector('.profile-bio').textContent = bio;
    
    // Actualizar imágenes del perfil
    document.querySelector('.profile-avatar').src = avatarUrl;
    document.querySelector('.profile-cover').style.backgroundImage = `url('${coverUrl}')`;
    
    // Cargar publicaciones con imágenes actualizadas
    loadPosts();
    
    // Actualizar las imágenes de perfil si se están usando placeholders
    if (avatarUrl === '/api/placeholder/150/150' || coverUrl === '/api/placeholder/1200/200') {
        // Usar imágenes de servicios externos para ejemplos variados
        const newAvatarUrl = 'https://placehold.co/150x150/FFB74D/FFF?text=Chef';
        const newCoverUrl = 'https://placehold.co/1200x200/FFA726/FFF?text=Cocina+Gourmet';
        
        // Actualizar en la página
        document.querySelector('.profile-avatar').src = newAvatarUrl;
        document.querySelector('.profile-cover').style.backgroundImage = `url('${newCoverUrl}')`;
        
        // Guardar en localStorage para futuras cargas
        localStorage.setItem('profileAvatar', newAvatarUrl);
        localStorage.setItem('profileCover', newCoverUrl);
    }
});
    </script>
</body>
</html>